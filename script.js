// Danh s√°ch l·ªùi ch√∫c 20-10
const wishes = [
  { icon: "üå∑", text: "Ch√∫c b·∫°n lu√¥n xinh ƒë·∫πp, m·∫°nh kh·ªèe v√† h·∫°nh ph√∫c trong cu·ªôc s·ªëng!" },
  { icon: "üå∏", text: "Ch√∫c nh·ªØng ng∆∞·ªùi ph·ª• n·ªØ tuy·ªát v·ªùi lu√¥n r·∫°ng r·ª° n·ª• c∆∞·ªùi, th√†nh c√¥ng trong m·ªçi lƒ©nh v·ª±c!" },
  { icon: "üéâ", text: "Ch√∫c m·ªçi ƒëi·ªÅu t·ªët ƒë·∫πp nh·∫•t s·∫Ω ƒë·∫øn v·ªõi b·∫°n h√¥m nay v√† m√£i v·ªÅ sau!" },
  { icon: "üå∫", text: "Ch√∫c b·∫°n lu√¥n t·ª± tin, t·ªèa s√°ng v√† ƒë∆∞·ª£c y√™u th∆∞∆°ng m·ªói ng√†y!" },
  { icon: "üíê", text: "G·ª≠i nh·ªØng l·ªùi ch√∫c t·ªët l√†nh, y√™u th∆∞∆°ng, ch√¢n th√†nh nh·∫•t t·ªõi b·∫°n nh√¢n ng√†y 20-10!" },
  { icon: "ü¶ã", text: "Mong b·∫°n lu√¥n gi·ªØ ƒë∆∞·ª£c n√©t duy√™n d√°ng, d·ªãu d√†ng v√† b·∫£n lƒ©nh c·ªßa ng∆∞·ªùi ph·ª• n·ªØ Vi·ªát Nam!" },
  { icon: "üéÅ", text: "Ch√∫c b·∫°n nh·∫≠n ƒë∆∞·ª£c th·∫≠t nhi·ªÅu hoa, qu√† v√† l·ªùi ch√∫c √Ω nghƒ©a trong ng√†y h√¥m nay!" },
  { icon: "üëë", text: "Ch√∫c m·ªôt n·ª≠a th·∫ø gi·ªõi lu√¥n th√†nh c√¥ng, xinh ƒë·∫πp v√† h·∫°nh ph√∫c vi√™n m√£n!" },
  { icon: "üíñ", text: "Ch√∫c b·∫°n ng√†y c√†ng xinh ƒë·∫πp, tr·∫ª trung v√† tr√†n ƒë·∫ßy nƒÉng l∆∞·ª£ng t√≠ch c·ª±c!" },
  { icon: "üåª", text: "Ch√∫c c√°c ch·ªã em lu√¥n vui v·∫ª, y√™u ƒë·ªùi v√† g·∫∑p nhi·ªÅu may m·∫Øn!" }
];

let currentIdx = 0;
const wishSlide = document.getElementById("wish-slide");
const prevBtn = document.getElementById("prev-btn");
const nextBtn = document.getElementById("next-btn");

function renderWish(idx) {
  const wish = wishes[idx];
  const words = wish.text.split(" ");
  let textHTML = "";
  words.forEach((word, i) => {
    textHTML += `<span class="wish-word" style="animation-delay: ${i * 0.07 + 0.08}s">${word}</span>`;
    if (i < words.length - 1) textHTML += " ";
  });
  wishSlide.innerHTML = `
    <div class="wish-card">
      <span class="wish-heart">‚ù§Ô∏è</span>
      <span class="wish-icon">${wish.icon}</span>
      <div class="wish-text">${textHTML}</div>
    </div>
  `;
  prevBtn.disabled = idx === 0;
  nextBtn.disabled = idx === wishes.length - 1;
}
renderWish(currentIdx);

prevBtn.onclick = () => {
  if (currentIdx > 0) {
    currentIdx--;
    renderWish(currentIdx);
  }
};
nextBtn.onclick = () => {
  if (currentIdx < wishes.length - 1) {
    currentIdx++;
    renderWish(currentIdx);
  }
};

// --------- Hi·ªáu ·ª©ng hoa/tr√°i tim r∆°i th·∫≥ng -----------
const fallingContainer = document.querySelector('.falling-container');
const fallItems = ['üå∏', 'üíñ', 'üå∑', '‚ù§Ô∏è', 'üíê', 'üå∫', 'üíó'];
function createFallingItem() {
  const item = document.createElement('span');
  item.className = 'falling';
  item.innerText = fallItems[Math.floor(Math.random() * fallItems.length)];
  item.style.left = Math.random() * 100 + 'vw';
  item.style.fontSize = (Math.random() * 1.6 + 1.4) + 'em';
  item.style.animationDuration = (Math.random() * 2 + 5.5) + 's';
  item.style.opacity = Math.random() * 0.3 + 0.7;
  fallingContainer.appendChild(item);
  item.addEventListener('animationend', () => item.remove());
}
setInterval(createFallingItem, 550);

// --------- T·ª± ƒë·ªông ph√°t nh·∫°c khi ng∆∞·ªùi d√πng t∆∞∆°ng t√°c n·∫øu b·ªã ch·∫∑n autoplay ----------
const music = document.getElementById('bg-music');
if (music) {
  music.play().catch(() => {
    const enableMusic = () => {
      music.play();
      document.body.removeEventListener('click', enableMusic);
      document.body.removeEventListener('touchstart', enableMusic);
    };
    document.body.addEventListener('click', enableMusic);
    document.body.addEventListener('touchstart', enableMusic);
  });
}
